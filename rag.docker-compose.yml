services:
  # langflow:
  #   image: langflowai/langflow:latest
  #   ports:
  #     - "7860:7860"
  #   depends_on:
  #     - postgres
  #   environment:
  #     - LANGFLOW_DATABASE_URL=postgresql://langflow:langflow@postgres:5432/langflow
  #     - DATABASE_URL=postgresql://langflow:langflow@postgres:5432/langflow
  #     # This variable defines where the logs, file storage, monitor data and secret keys are stored.
  #   volumes:
  #     - langflow-data:/app/langflow
  #   networks:
  #     - app-network

  
  postgres:
    image: ankane/pgvector
    # build:
    #   context: .
    #   dockerfile: db.Dockerfile
    environment:
      POSTGRES_USER: langflow
      POSTGRES_PASSWORD: langflow
      POSTGRES_DB: langflow
      LANG: en_US.utf8
      LANGUAGE: en_US:en
      LC_ALL: en_US.utf8
    ports:
      - "5432:5432"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langflow"]
      # test: ["CMD-SHELL", "psql -U langflow -d langflow -c 'SELECT extname FROM pg_extension WHERE extname = \'vector\';'"]
      interval: 10s
      timeout: 5s
      retries: 5
      # start_period: 30s
    networks:
      - ragnet

networks:
  ragnet:
    driver: bridge



#   postgres:
#     build:
#       context: .
#       dockerfile: db.Dockerfile
#     environment:
#       POSTGRES_USER: langflow
#       POSTGRES_PASSWORD: langflow
#       POSTGRES_DB: langflow
#     ports:
#       - "5432:5432"
#     volumes:
#       - langflow-postgres:/var/lib/postgresql/data
#     volumes:
#       - ./initdb:/docker-entrypoint-initdb.d
#     networks:
#       - app-network
#     command: ["postgres", "-c", "shared_preload_libraries=vector"]

# volumes:
#   langflow-postgres:
#   langflow-data:

# networks:
#   app-network:
#     driver: bridge
